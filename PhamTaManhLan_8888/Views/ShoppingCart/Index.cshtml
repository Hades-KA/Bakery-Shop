@model ShoppingCart

<h2 class="text-center mb-4">Your Cart</h2>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success text-center">@TempData["SuccessMessage"]</div>
}

<table class="table table-striped table-bordered">
    <thead class="table-dark">
        <tr>
            <th>Product</th>
            <th class="text-center">Quantity</th>
            <th class="text-end">Price</th>
            <th class="text-end">Total</th>
            <th class="text-center">Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Items)
        {
            <tr>
                <td>@item.Name</td>
                <td class="text-center">
                    <input type="number" class="form-control d-inline w-50 text-center quantity-input"
                           data-product-id="@item.ProductId" value="@item.Quantity" min="1"
                           data-original-quantity="@item.Quantity" />
                </td>
                <td class="text-end">@item.Price.ToString("N0") VND</td>
                <td class="text-end">@((item.Price * item.Quantity).ToString("N0")) VND</td>
                <td class="text-center">
                    <a asp-action="RemoveFromCart" asp-route-productId="@item.ProductId" class="btn btn-sm btn-danger">
                        <i class="bi bi-trash"></i> Remove
                    </a>
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="row mt-4">
    <div class="col-md-6">
        <form asp-action="Checkout" method="post" id="checkout-form">
            <div class="mb-3">
                <label for="payment-method" class="form-label fw-bold">Payment Method</label>
                <select name="PaymentMethod" id="payment-method" class="form-select">
                    <option value="CreditCard">Credit Card</option>
                    <option value="Paypal">PayPal</option>
                    <option value="COD">Cash on Delivery</option>
                </select>
            </div>

            @if (ViewBag.IsCustomer)
            {
                <button type="submit" class="btn btn-success btn-lg">
                    <i class="bi bi-credit-card"></i> Proceed to Checkout
                </button>
            }
            else
            {
                <div class="alert alert-warning text-center mt-3">
                    Only customers can place orders.
                </div>
            }
        </form>
    </div>

    <div class="col-md-6 text-end">
        <h4 class="fw-bold">Total: <span id="cart-total">@Model.Items.Sum(i => i.Price * i.Quantity).ToString("N0") VND</span></h4>
        <a asp-action="ClearCart" class="btn btn-warning btn-lg mt-2">
            <i class="bi bi-x-circle"></i> Clear Cart
        </a>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // --- Script 1: Cập nhật số lượng sản phẩm ---
            $('.quantity-input').on('change', function () {
                var productId = $(this).data('product-id');
                var quantity = $(this).val();
                var row = $(this).closest('tr');

                $.ajax({
                    url: '/ShoppingCart/UpdateCartItemAjax',
                    type: 'POST',
                    data: { productId: productId, quantity: quantity },
                    success: function (data) {
                        if (data.success) {
                            row.find('.text-end:nth-child(4)').text(formatNumber(data.itemTotal) + ' VND');
                            if ($('#cart-total').length) {
                                $('#cart-total').text(formatNumber(data.cartTotal) + ' VND');
                            }
                            $('#cart-count-badge').text(data.cartCount);
                        } else if (data.error) {
                            alert(data.error);
                            $('.quantity-input[data-product-id="' + productId + '"]').val($('.quantity-input[data-product-id="' + productId + '"]').data('original-quantity'));
                        }
                        $('.quantity-input[data-product-id="' + productId + '"]').data('original-quantity', quantity);
                    },
                    error: function () {
                        alert('Có lỗi xảy ra khi cập nhật giỏ hàng.');
                        $('.quantity-input[data-product-id="' + productId + '"]').val($('.quantity-input[data-product-id="' + productId + '"]').data('original-quantity'));
                    }
                });
            });

            $('.quantity-input').each(function () {
                $(this).data('original-quantity', $(this).val());
            });

            function formatNumber(number) {
                return number.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
            }

            // --- Script 2: Nút tăng/giảm số lượng (nếu có sử dụng) ---
            $('.update-quantity').click(function () {
                const row = $(this).closest('tr');
                const productId = row.data('product-id');
                const delta = parseInt($(this).data('delta'));

                $.ajax({
                    url: '/ShoppingCart/UpdateQuantity',
                    method: 'POST',
                    data: { productId, delta },
                    success: function (result) {
                        row.find('.quantity').text(result.newQuantity);
                        row.find('.subtotal').text(result.newSubtotalFormatted);
                        $('#total-price').text(result.newTotalFormatted);
                    }
                });
            });

            // --- Script 3: Xử lý chọn phương thức thanh toán ---
            $('#payment-method').change(function () {
                $('#payment-method-input').val($(this).val());
            });

            $('#payment-method-input').val($('#payment-method').val());
        });
    </script>
}
