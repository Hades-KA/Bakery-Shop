<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Bakery Shop</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/PhamTaManhLan_8888.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/StyleSheet.css" asp-append-version="true" />
</head>
<body class="@(Context.Request.Path.Value.Contains("404") || Context.Request.Path.Value.Contains("/Home/Error") ? "error-page" : "")">

    @if (!Context.Request.Path.Value.Contains("404") && !Context.Request.Path.Value.Contains("/Home/Error"))
    {
        <header>
            <nav class="navbar navbar-expand-sm navbar-dark custom-navbar mb-3">
                <div class="container-fluid">
                    <a class="navbar-brand fw-bold" asp-area="" asp-controller="Home" asp-action="Index">Bakery Shop</a>
                    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse">
                        <span class="navbar-toggler-icon"></span>
                    </button>

                    <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                        <ul class="navbar-nav flex-grow-1">
                            <li class="nav-item">
                                <a class="nav-link" asp-controller="Home" asp-action="Index">Home</a>
                            </li>
                   
                    

                            @if (User.IsInRole("Customer"))
                            {
                                    <li class="nav-item">
                                        <a class="nav-link" asp-controller="Order" asp-action="MyOrderItems">My Orders</a>
                                    </li>
                            }

                            @if (User.IsInRole("Admin"))
                            {
                                    <li class="nav-item">
                                        <a class="nav-link" asp-area="Admin" asp-controller="Category" asp-action="Index">Manage Categories</a>
                                    </li>
                            }

                            <li class="nav-item dropdown">
                                <a class="nav-link dropdown-toggle" href="#" id="categoryDropdown" data-bs-toggle="dropdown">
                                    Danh m·ª•c
                                </a>
                                <ul class="dropdown-menu" aria-labelledby="categoryDropdown">
                                    @if (ViewBag.Categories != null)
                                    {
                                        foreach (var category in ViewBag.Categories)
                                        {
                                                    <li>
                                                        <a class="dropdown-item"
                                                           asp-controller="@(User.IsInRole("Admin") || User.IsInRole("Employee") ? "Product" : "Home")"
                                                           asp-action="Index"
                                                           asp-route-category="@category.Text">
                                                    @category.Text
                                                        </a>
                                                    </li>
                                        }
                                    }
                                    else
                                    {
                                            <li><a class="dropdown-item">Kh√¥ng c√≥ danh m·ª•c</a></li>
                                    }
                                </ul>
                            </li>
                        </ul>

                        <form class="d-flex" asp-controller="@(User.IsInRole("Admin") || User.IsInRole("Employee") ? "Product" : "Home")" asp-action="Index" method="get">
                            <input class="form-control me-2" type="search" name="searchTerm" placeholder="T√¨m ki·∫øm s·∫£n ph·∫©m" />
                            <button class="btn btn-outline-light" type="submit">T√¨m</button>
                        </form>

                        <partial name="_LoginPartial" />

                        @if (User.IsInRole("Customer"))
                        {
                                <a asp-controller="ShoppingCart" asp-action="Index" class="btn btn-primary position-relative ms-3">
                                    <i class="bi-cart-fill me-1"></i>
                                    Cart
                                    <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger" id="cart-count-badge">
                                    @(ViewBag.CartCount ?? 0)
                                    </span>
                                </a>
                        }
                    </div>
                </div>
            </nav>
        </header>
    }

<div class="container">
    <main role="main" class="pb-3">
            @RenderBody()
    </main>
</div>

<footer class="border-top footer text-muted">
    <div class="container">
        &copy; 2025 - Bakery Shop - <a asp-controller="Home" asp-action="Privacy">Privacy</a>
    </div>
</footer>

<!-- Scripts -->
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
<script src="~/js/site.js" asp-append-version="true"></script>
<script>
    function updateCartCount() {
        $.get("/ShoppingCart/GetCartCount", function (data) {
            $("#cart-count-badge").text(data.cartCount);
        });
    }
    $(document).ready(function () {
        updateCartCount();
    });
</script>
    @await RenderSectionAsync("Scripts", required: false)

<!-- Chatbot UI -->
<div class="chat-icon" onclick="toggleChat()">üí¨</div>
<div class="chat-box" id="chatBox">
    <div class="chat-header">Gemini Chatbot</div>
    <div class="chat-messages" id="chatMessages"></div>
    <div class="chat-input">
        <input type="text" id="chatInput" placeholder="Nh·∫≠p tin nh·∫Øn..." onkeypress="if(event.key === 'Enter') sendMessage();">
        <button onclick="sendMessage()">G·ª≠i</button>
    </div>
</div>

<!-- Chatbot CSS -->
<style>
    .chat-icon {
        position: fixed;
        bottom: 20px;
        right: 20px;
        width: 60px;
        height: 60px;
        background-color: #28a745;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 24px;
        cursor: pointer;
        z-index: 1000;
    }

    .chat-box {
        position: fixed;
        bottom: 90px;
        right: 20px;
        width: 360px;
        height: 450px;
        background-color: #fff;
        border-radius: 15px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
        display: none;
        flex-direction: column;
        z-index: 1000;
    }

    .chat-header {
        background-color: #28a745;
        color: white;
        padding: 12px;
        border-top-left-radius: 15px;
        border-top-right-radius: 15px;
        text-align: center;
    }

    .chat-messages {
        flex: 1;
        padding: 15px;
        overflow-y: auto;
        background-color: #f8f9fa;
    }

    .message {
        margin: 8px 0;
        padding: 10px;
        border-radius: 8px;
        max-width: 80%;
        word-wrap: break-word;
    }

    .user-message {
        background-color: #28a745;
        color: white;
        margin-left: auto;
    }

    .bot-message {
        background-color: #e9ecef;
        color: #333;
        margin-right: auto;
    }

    .chat-input {
        display: flex;
        padding: 10px;
        border-top: 1px solid #ddd;
    }

    .chat-input input {
        flex: 1;
        padding: 8px;
        border: 1px solid #ccc;
        border-radius: 5px;
        margin-right: 10px;
    }

    .chat-input button {
        padding: 8px 16px;
        background-color: #28a745;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }
</style>

<!-- Chatbot JS -->
<script>
    function toggleChat() {
        const chatBox = document.getElementById('chatBox');
        chatBox.style.display = chatBox.style.display === 'flex' ? 'none' : 'flex';
    }

    function addMessage(content, isUser) {
        const messages = document.getElementById('chatMessages');
        const messageDiv = document.createElement('div');
        messageDiv.className = 'message ' + (isUser ? 'user-message' : 'bot-message');
        messageDiv.textContent = content;
        messages.appendChild(messageDiv);
        messages.scrollTop = messages.scrollHeight;
    }

    async function sendMessage() {
        const input = document.getElementById('chatInput');
        const message = input.value.trim();
        if (!message) {
            addMessage("Vui l√≤ng nh·∫≠p tin nh·∫Øn!", false);
            return;
        }
        addMessage(message, true);
        input.value = '';

        try {
            const response = await fetch('/Gemini/Chat', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json', 'Accept': 'application/json' },
                body: JSON.stringify({ message })
            });

            const data = await response.json();
            if (data.success) {
                addMessage(data.response, false);
            } else {
                addMessage('L·ªói: ' + data.error, false);
            }
        } catch (error) {
            addMessage('L·ªói: ' + error.message, false);
        }
    }
</script>

</body>
</html>
