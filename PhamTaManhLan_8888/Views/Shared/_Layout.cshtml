<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Bakery Shop</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/PhamTaManhLan_8888.styles.css" asp-append-version="true" />
</head>
<body class="@(Context.Request.Path.Value.Contains("404") || Context.Request.Path.Value.Contains("/Home/Error") ? "error-page" : "")">
    <p>User Roles: @string.Join(", ", User.Claims.Where(c => c.Type == System.Security.Claims.ClaimTypes.Role).Select(c => c.Value))</p>

    @if (!Context.Request.Path.Value.Contains("404") && !Context.Request.Path.Value.Contains("/Home/Error"))
    {
            <header>
                <nav class="navbar navbar-expand-sm navbar-dark custom-navbar mb-3">
                    <div class="container-fluid">
                        <a class="navbar-brand fw-bold" asp-area="" asp-controller="Home" asp-action="Index">Bakery Shop</a>
                        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" 
                                aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                            <span class="navbar-toggler-icon"></span>
                        </button>
                        <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                            <ul class="navbar-nav flex-grow-1">
                                <li class="nav-item">
                                    <a class="nav-link" asp-area="" asp-controller="Home" asp-action="Index">Home</a>
                                </li>
                            @if (User.IsInRole("Admin") || User.IsInRole("Employee"))
                            {
                                        <li class="nav-item">
                                            <a class="nav-link" asp-area="" asp-controller="Product" asp-action="Index">Index</a>
                                        </li>
                            }
                            @if (User.IsInRole("Customer"))
                            {
                                        <li class="nav-item">
                                            <a class="nav-link" asp-controller="Order" asp-action="MyOrderItems">My Ordered Products</a>
                                        </li>
                            }
                            @if (User.IsInRole("Admin"))
                            {
                                        <li class="nav-item">
                                            <a class="nav-link" asp-area="Admin" asp-controller="Category" asp-action="Index">Manage Categories</a>
                                        </li>
                            }
                            </ul>
                            <partial name="_LoginPartial" />
                        @if (User.IsInRole("Customer"))
                        {
                                    <a asp-controller="ShoppingCart" asp-action="Index" class="btn btn-primary position-relative">
                                        <i class="bi-cart-fill me-1"></i>
                                        Cart
                                        <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger" id="cart-count-badge">
                                    @(ViewBag.CartCount ?? 0)
                                        </span>
                                    </a>
                        }
                        </div>
                    </div>
                </nav>
            </header>
    }

    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2025 - Bakery Shop - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
        </div>
    </footer>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script>
        function updateCartCount() {
            $.get("/ShoppingCart/GetCartCount", function (data) {
                $("#cart-count-badge").text(data.cartCount);
            });
        }
        $(document).ready(function () {
            updateCartCount();
        });
    </script>
    @await RenderSectionAsync("Scripts", required: false)

<link rel="stylesheet" href="~/css/StyleSheet.css" asp-append-version="true" />

<!-- Chatbot Icon and Dialog -->
<div class="chat-icon" onclick="toggleChat()"> </div>
<div class="chat-box" id="chatBox">
<div class="chat-header">Gemini Chatbot</div>
<div class="chat-messages" id="chatMessages"></div>
<div class="chat-input">
<input type="text" id="chatInput" placeholder="Nhập tin nhắn..." onkeypress="if(event.key === 'Enter') sendMessage();">
<button onclick="sendMessage()">Gửi</button>
</div>
</div>

<!--Css cho chat bot-->
<style >
/* CSS cho chatbot */
.chat-icon {
    position: fixed;
    bottom: 20px;
    right: 20px;
    width: 60px;
    height: 60px;
    background-color: #28a745;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-size: 24px;
    cursor: pointer;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    z-index: 1000;
    transition: background-color 0.3s;
}

.chat-icon:hover {
    background-color: #218838;
}

.chat-box {
    position: fixed;
    bottom: 90px;
    right: 20px;
    width: 360px;
    height: 450px;
    background-color: #fff;
    border-radius: 15px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    display: none;
    flex-direction: column;
    z-index: 1000;
}

.chat-header {
    background-color: #28a745;
    color: white;
    padding: 12px;
    border-top-left-radius: 15px;
    border-top-right-radius: 15px;
    text-align: center;
    font-size: 18px;
    font-weight: bold;
}

.chat-messages {
    flex: 1;
    padding: 15px;
    overflow-y: auto;
    background-color: #f8f9fa;
}

.message {
    margin: 8px 0;
    padding: 10px;
    border-radius: 8px;
    max-width: 80%;
    word-wrap: break-word;
}

.user-message {
    background-color: #28a745;
    color: white;
    margin-left: auto;
}

.bot-message {
    background-color: #e9ecef;
    color: #333;
    margin-right: auto;
}

.chat-input {
    display: flex;
    padding: 10px;
    border-top: 1px solid #ddd;
}

    .chat-input input {
        flex: 1;
        padding: 8px;
        border: 1px solid #ccc;
        border-radius: 5px;
        outline: none;
        margin-right: 10px;
    }

    .chat-input button {
        padding: 8px 16px;
        background-color: #28a745;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s;
    }

        .chat-input button:hover {
            background-color: #218838;
        }
    </style>

<script>
function toggleChat() {
const chatBox = document.getElementById('chatBox');
chatBox.style.display = chatBox.style.display === 'flex' ? 'none' : 'flex';
}
function addMessage(content, isUser) {
const messages = document.getElementById('chatMessages');
const messageDiv = document.createElement('div');
messageDiv.className = 'message ' + (isUser ? 'user-message' : 'bot- message');
messageDiv.textContent = content;
messages.appendChild(messageDiv);
messages.scrollTop = messages.scrollHeight;
}
async function sendMessage() {
const input = document.getElementById('chatInput');
const message = input.value.trim();
if (!message) {
addMessage("Vui lòng nhập tin nhắn!", false);
return;
}
addMessage(message, true);
input.value = '';
try {
const response = await fetch('/Gemini/Chat', {
method: 'POST', headers: {
'Content-Type': 'application/json',
'Accept': 'application/json'

},body: JSON.stringify({ message: message })
});
if (!response.ok) {
const errorText = await response.text();
throw new Error(`Lỗi server: ${response.status} - ${errorText}`);
}
const data = await response.json();
if (data.success) {
addMessage(data.response, false);
} else {
addMessage('Lỗi: ' + data.error, false);
}
} catch (error) {
addMessage('Lỗi: ' + error.message, false);
}
}
</script>

    <link rel="stylesheet" href="~/css/StyleSheet.css" asp-append-version="true" />

</body>
</html>
